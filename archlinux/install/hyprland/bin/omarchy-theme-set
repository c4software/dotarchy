#!/bin/bash

# omarchy-theme-set: Set a theme, specified by its name.
# Usage: omarchy-theme-set <theme-name>

cmd_present() {
  command -v "$1" >/dev/null 2>&1
}

if [[ -z "$1" && "$1" != "CNCLD" ]]; then
  echo "Usage: omarchy-theme-set <theme-name>" >&2
  exit 1
fi

THEMES_DIR="$HOME/.config/themes/"
CURRENT_THEME_DIR="$HOME/.config/theme"

THEME_NAME=$(echo "$1" | sed -E 's/<[^>]+>//g' | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
THEME_PATH="$THEMES_DIR/$THEME_NAME"

# Check if the theme entered exists
if [[ ! -d "$THEME_PATH" ]]; then
  echo "Theme '$THEME_NAME' does not exist in $THEMES_DIR" >&2
  exit 2
fi

# Update theme symlinks
ln -nsf "$THEME_PATH" "$CURRENT_THEME_DIR"

# Change gnome modes
if [[ -f ~/.config/theme/light.mode ]]; then
  gsettings set org.gnome.desktop.interface color-scheme "prefer-light"
  gsettings set org.gnome.desktop.interface gtk-theme "Adwaita"
else
  gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"
  gsettings set org.gnome.desktop.interface gtk-theme "Adwaita-dark"
fi

# Change gnome icon theme color
if [[ -f ~/.config/theme/icons.theme ]]; then
  gsettings set org.gnome.desktop.interface icon-theme "$(<~/.config/theme/icons.theme)"
else
  gsettings set org.gnome.desktop.interface icon-theme "Yaru-blue"
fi

# Trigger terminal config reload
case "$TERMINAL" in
"alacritty") touch ~/.config/alacritty/alacritty.toml ;;
"kitty") killall -SIGUSR1 kitty ;;
"ghostty") killall -SIGUSR2 ghostty ;;
esac

# ln the btop current.theme to the current theme
ln -nsf "$CURRENT_THEME_DIR/btop.theme" "$HOME/.config/btop/themes/current.theme"

# Set the mako theme
mkdir -p ~/.config/mako
ln -snf ~/.config/theme/mako.ini ~/.config/mako/config

# Theme eza
mkdir -p ~/.config/eza
if [ -f ~/.config/omarchy/current/theme/eza.yml ]; then
  ln -snf ~/.config/omarchy/current/theme/eza.yml ~/.config/eza/theme.yml
else
  rm -f ~/.config/eza/theme.yml
fi

# Theme Chromium / Brave
CHROMIUM_THEME=~/.config/theme/chromium.theme



if cmd_present chromium || cmd_present brave; then

  # Extract RGB color from theme file
  if [[ -f $CHROMIUM_THEME ]]; then
    rgb=$(<$CHROMIUM_THEME)
    THEME_HEX_COLOR=$(printf '#%02x%02x%02x' ${rgb//,/ })
  else
    # Use a default, neutral grey if theme doesn't have a color
    THEME_HEX_COLOR="#1c2027"
  fi

  # Update system-wide policies (requires pkexec)
  pkexec bash -c '
      set -e

      if command -v chromium >/dev/null 2>&1; then
        mkdir -p /etc/chromium/policies/managed
        echo "{\"BrowserThemeColor\": \"$THEME_HEX_COLOR\"}" > /etc/chromium/policies/managed/color.json
      fi

      if command -v brave >/dev/null 2>&1; then
        mkdir -p /etc/brave/policies/managed
        echo "{\"BrowserThemeColor\": \"$THEME_HEX_COLOR\"}" > /etc/brave/policies/managed/color.json
      fi
    '

  # Refresh browser policies
  if cmd_present chromium; then
    chromium --refresh-platform-policy --no-startup-window
  fi

  if cmd_present brave; then
    brave --refresh-platform-policy --no-startup-window
  fi

fi


# Restart components to apply new theme
pkill -SIGUSR2 btop
omarchy-restart-waybar
omarchy-restart-swayosd
makoctl reload
hyprctl reload

# Set new background
random-bg
